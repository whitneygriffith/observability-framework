apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: otel-exporters
data:
  prometheus.yml: |
    # my global config
    global:
      scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).

    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          # - alertmanager:9093

    # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:


      # - "first_rules.yml"
      # - "second_rules.yml"

    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.

    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'

        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.

        static_configs:
        - targets: ['localhost:9090']
      # TODO: Enable Service Account and Cluster Role permissions to query K8s node and pods https://github.com/shevyf/prom_on_k8s_howto/blob/master/prometheus-roles.yml
      # - job_name: 'kubernetes-nodes'
      #   scheme: https
      #   #tls_config:
      #   #  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   # bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   kubernetes_sd_configs:
      #   - role: node
      #   relabel_configs:
      #   - action: labelmap
      #     regex: __meta_kubernetes_node_label_(.+)
      #   - target_label: __address__
      #     replacement: kubernetes.default.svc:443
      #   - source_labels: [__meta_kubernetes_node_name]
      #     regex: (.+)
      #     target_label: __metrics_path__
      #     replacement: /api/v1/nodes/${1}/proxy/metrics
          
      # - job_name: 'kubernetes-pods'
      #   kubernetes_sd_configs:
      #   - role: pod
      #   relabel_configs:
      #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      #     action: keep
      #     regex: true
      #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      #     action: replace
      #     target_label: __metrics_path__
      #     regex: (.+)
      #   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      #     action: replace
      #     regex: ([^:]+)(?::\d+)?;(\d+)
      #     replacement: $1:$2
      #     target_label: __address__
      #   - action: labelmap
      #     regex: __meta_kubernetes_pod_label_(.+)
      #   - source_labels: [__meta_kubernetes_namespace]
      #     action: replace
      #     target_label: kubernetes_namespace
      #   - source_labels: [__meta_kubernetes_pod_name]
      #     action: replace
      #     target_label: kubernetes_pod_name

---
apiVersion: v1
kind: Pod
metadata:
  name: prometheus
  namespace: otel-exporters
  labels:
    app: prometheus
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  containers:
  - name: prometheus
    image: prom/prometheus:latest
    args:
      - '--storage.tsdb.retention.time=6h'
      - '--storage.tsdb.path=/prometheus'
      - '--config.file=/etc/prometheus/prometheus.yml'
    command:
    - /bin/prometheus
    ports:
    - name: web
      containerPort: 9090
    volumeMounts:
    - name: config-volume
      mountPath: /etc/prometheus
    - name: data
      mountPath: /prometheus
  restartPolicy: Always
  securityContext: {}
  terminationGracePeriodSeconds: 30
  volumes:
  - name: config-volume
    configMap:
      name: prometheus-config
  - name: data
    emptyDir: {}